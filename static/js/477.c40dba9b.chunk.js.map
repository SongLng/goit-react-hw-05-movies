{"version":3,"file":"static/js/477.c40dba9b.chunk.js","mappings":"oQAEaA,EAAUC,EAAAA,EAAAA,IAAH,kEAKPC,EAAaD,EAAAA,EAAAA,IAAH,oHAOVE,EAAQF,EAAAA,EAAAA,IAAH,kGAOLG,EAAcH,EAAAA,EAAAA,IAAH,iGAMXI,EAAQJ,EAAAA,EAAAA,GAAH,6CAILK,EAAQL,EAAAA,EAAAA,EAAH,iEAKLM,EAAeN,EAAAA,EAAAA,EAAH,iE,kBCrBnBO,GAAOC,EAAAA,EAAAA,OAAK,kBAChB,gCAEIC,GAASD,EAAAA,EAAAA,OAAK,kBAClB,gCAGa,SAASE,IAAoB,IAAD,IACzC,GAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAeJ,EAAAA,EAAAA,WAAiB,OAARG,QAAQ,IAARA,GAAA,UAAAA,EAAUE,aAAV,eAAiBC,OAAjB,OAAwBH,QAAxB,IAAwBA,GAAxB,UAAwBA,EAAUE,aAAlC,aAAwB,EAAiBE,SAA1DC,GAAP,eACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WAER,OADAC,EAAAA,GAAsBH,GAASI,KAAKX,GAC7B,WACLA,EAAQ,SAET,CAACO,KASF,gCACGR,IACC,UAACb,EAAD,YACE,SAACE,EAAD,WACE,SAACC,EAAD,CACEuB,IACEb,EAAKc,YAAL,yCACsCd,EAAKc,aACvCC,EAENC,IAAKhB,EAAKiB,eACVC,QAAQ,YAGZ,SAAC,KAAD,CAAMC,GAAIZ,EAAV,mBAEA,UAAChB,EAAD,YACE,SAACC,EAAD,oBACMQ,EAAKiB,eADX,aAEIjB,EAAKoB,aACD,IAAIC,KAAKrB,EAAKoB,cAAcE,cAC5B,oCAJR,QAOA,SAAC7B,EAAD,yBACA,SAACC,EAAD,UAAeM,EAAKuB,YACpB,SAAC9B,EAAD,uBACA,SAACC,EAAD,UACGM,EAAKwB,OAAOC,KAAI,qBAAGC,QAAiBC,KAAK,SAE5C,wBACE,SAAC,KAAD,CAAMR,GAAG,OAAT,qBAEF,wBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAKR,SAAC,EAAAS,SAAD,CAAUC,UAAU,wCAApB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOtB,KAAK,OAAOuB,SAAS,SAACnC,EAAD,CAAMa,QAASA,OAC3C,SAAC,KAAD,CAAOD,KAAK,UAAUuB,SAAS,SAACjC,EAAD,CAAQW,QAASA","sources":["components/pages/MovieDetailsPage/MovieDetails.styled.jsx","components/pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  margin-bottom: 15px;\n`;\n\nexport const ImageThumb = styled.div`\n  margin-right: 50px;\n  display: flex;\n  justify-content: flex-end;\n  flex-basis: 100%;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n  //   width: 300px;\n  height: auto;\n`;\n\nexport const Description = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-basis: fit-content;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 700;\n`;\n\nexport const Label = styled.p`\n  font-size: 18px;\n  font-weight: 700;\n`;\n\nexport const OverviewText = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n`;\n","import { useParams, Link, Routes, Route, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense, lazy } from 'react';\nimport * as movieAPI from '../../../services/movie-api';\n\nimport {\n  Image,\n  Label,\n  OverviewText,\n  Wrapper,\n  Description,\n  Title,\n  ImageThumb,\n} from './MovieDetails.styled';\nimport placeholderImg from '../../../images/placeholder.bmp';\n\nconst Cast = lazy(() =>\n  import('../Cast/Cast.jsx' /*webpackChunkName: 'Cast' */)\n);\nconst Review = lazy(() =>\n  import('../Review/Review.jsx' /*webpackChunkName: 'Review' */)\n);\n\nexport default function MovieDetailsPage() {\n  const [data, setData] = useState(null);\n  const location = useLocation();\n  const [path] = useState(location?.state?.from + location?.state?.search);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    movieAPI.fetchDetails(movieId).then(setData);\n    return () => {\n      setData(null);\n    };\n  }, [movieId]);\n\n  // useEffect(() => {\n  //   setPath();\n\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, []);\n\n  return (\n    <>\n      {data && (\n        <Wrapper>\n          <ImageThumb>\n            <Image\n              src={\n                data.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${data.poster_path}`\n                  : placeholderImg\n              }\n              alt={data.original_title}\n              loading=\"lazy\"\n            />\n          </ImageThumb>\n          <Link to={path}>Back</Link>\n\n          <Description>\n            <Title>\n              {`${data.original_title} (${\n                data.release_date\n                  ? new Date(data.release_date).getFullYear()\n                  : 'no information about release date'\n              })`}\n            </Title>\n            <Label>Overview:</Label>\n            <OverviewText>{data.overview}</OverviewText>\n            <Label>Genres:</Label>\n            <OverviewText>\n              {data.genres.map(({ name }) => name).join(', ')}\n            </OverviewText>\n            <p>\n              <Link to=\"cast\">Cast</Link>\n            </p>\n            <p>\n              <Link to=\"reviews\">Reviews</Link>\n            </p>\n          </Description>\n        </Wrapper>\n      )}\n      <Suspense fallback={<div>Loading...</div>}>\n        <Routes>\n          <Route path=\"cast\" element={<Cast movieId={movieId} />} />\n          <Route path=\"reviews\" element={<Review movieId={movieId} />} />\n        </Routes>\n      </Suspense>\n    </>\n  );\n}\n"],"names":["Wrapper","styled","ImageThumb","Image","Description","Title","Label","OverviewText","Cast","lazy","Review","MovieDetailsPage","useState","data","setData","location","useLocation","state","from","search","path","movieId","useParams","useEffect","movieAPI","then","src","poster_path","placeholderImg","alt","original_title","loading","to","release_date","Date","getFullYear","overview","genres","map","name","join","Suspense","fallback","element"],"sourceRoot":""}